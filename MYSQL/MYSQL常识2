一.创建外键约束
在audit表上创建外键约束，其emp_no对应employees_test表的主键id
ALTER TABLE audit
ADD CONSTRAINT FOREIGN KEY (emp_no)
REFERENCES employees_test(id);

二.求字符串个数
查找字符串'10,A,B' 中逗号','出现的次数cnt。
思路：
把串 "10,A,B" 中的 逗号用空串替代， 变成了 "10AB"
然后原来串的长度 - 替换之后的串的长度 就是 被替换的 逗号的个数
select 
  (
  length("10,A,B") - length(replace("10,A,B",",",""))
  )
as cnt;

三.截取字符串
三种方法都可以用
LEFT(s,n)返回字符串 s 的前 n 个字符
RIGHT(s,n)返回字符串 s 的后 n 个字符
第一种：（right）
select first_name
from employees
order by right(first_name,2)

第二种：（substr）
select first_name from employees  order by substr(first_name,-2)

第三种：（substring）
select first_name from employees  order by substring(first_name,-2)

三.聚合函数group_concat
group_concat（）函数将group by产生的同一个分组中的值连接起来，返回一个字符串结果。
group_concat( [distinct] 要连接的字段 [order by 排序字段 asc/desc ] [separator '分隔符'] )
注意：当数据太大，group_concat超出了默认值1024，超过就会截断，group_concat查询出来的数据就会不全。

select dept_no, group_concat(emp_no) as employees
from dept_emp
group by dept_no

四.LIMIT 分页查询employees表
SELECT *
FROM employees
LIMIT 5,5

LIMIT 语句结构： LIMIT X,Y 
Y ：返回几条记录
X：从第几条记录开始返回（第一条记录序号为0，默认为0）

五.条件判断语句
给出emp_no、first_name、last_name、奖金类型btype、对应的当前薪水情况salary以及奖金金额bonus
bonus类型btype为1其奖金为薪水salary的10%，btype为2其奖金为薪水的20%，其他类型均为薪水的30%
当前薪水表示to_date='9999-01-01'

select s.emp_no,e.first_name,e.last_name,eb.btype,s.salary,
    case when eb.btype=1 then s.salary*0.1
    when eb.btype=2 then s.salary*0.2
    else s.salary*0.3
    end as bonus
FROM emp_bonus eb,salaries s,employees e
    where eb.emp_no=s.emp_no 
    and s.emp_no=e.emp_no 
    and s.to_date='9999-01-01'
    
统计正常用户发送给正常用户邮件失败的概率(其中round(X,3)指X保留三位小数）
SELECT a.date, round(sum(case when a.type="no_completed" then 1  else 0 end)/count(*),3) 
或者
SELECT a.date, round(sum(a.type="no_completed")/count(*),3) as f from
  (select * FROM email
  WHERE send_id in(select id from user where is_blacklist=0)
  and receive_id IN(select id from user where is_blacklist=0))a
GROUP by a.date
ORDER by date

六.窗口函数的使用
牛客每天有很多人登录，请你统计一下牛客每个用户最近登录是哪一天，用的是什么设备.
SELECT u.name,c.name,re.date FROM 
    (SELECT user_id,client_id,date FROM
      (
          select user_id,date,client_id,rank() over(partition by user_id order by date desc) nk
          FROM login
      ) a
    WHERE a.nk=1
    ORDER by a.user_id) re
left join user u
ON re.user_id=u.id
left JOIN client c
ON re.client_id=c.id
order by u.name

# select user.name as u_n, client.name as c_n,
# login.date
# from login 
# join user on login.user_id=user.id
# join client on login.client_id=client.id
# where (login.user_id,login.date) in
# (select user_id,max(date) from login group by login.user_id )
# order by user.name;

七.留存率的计算
1.（SQL 68）查询新登录用户次日成功的留存率

总用户数量
select count(distinct user_id) from login
每个用户第一天登陆的日子（即为新用户）
select user_id,min(date) from login group by user_id
后一天登录还登录的新用户
SELECT user_id, DATE_ADD(MIN(date),INTERVAL 1 DAY) FROM login GROUP BY user_id
MySQL解法：
SELECT
  ROUND(COUNT(DISTINCT user_id)*1.0 / (SELECT COUNT(DISTINCT user_id) FROM login), 3)
  FROM login
  WHERE (user_id, date)
  IN
  (SELECT user_id, DATE_ADD(MIN(date),INTERVAL 1 DAY) FROM login GROUP BY user_id);
  
2.统计每个日期登录新用户个数
select distinct date
        ,sum(case when (user_id,date) in 
    (select user_id,min(date)from login group by user_id)
    then 1 else 0 end)
from login
group by date
order by date;

3.统计每个日期新用户的次日留存率
select date
        ,ifnull(round((sum(case when (user_id,date)in
            (select user_id,date_add(date,interval -1 day)
             from login group by user_id)
            then 1 else 0 end))/
        (sum(case when (user_id,date)in
            (select user_id,min(date)from login group by user_id)
            then 1 else 0 end)),3),0)as p
from login
group by date
order by date;





